#!/usr/bin/env node

// rows/columns for each zoom level
// Appropriate for 250m resolution (e.g., VIIRS)
const zoomLevelMatrix = [
  [1, 2],       // zoom level 0
  [2, 3],       // zoom level 1
  [3, 5],       // zoom level 2
  [5, 10],      // zoom level 3
  [10, 20],     // zoom level 4
  [20, 40],     // zoom level 5
  [40, 80],     // zoom level 6
  [80, 160],    // zoom level 7
  [160, 320]    // zoom level 8
];

const BASE_URL = [
  "http://localhost:8080/mrf_endpoint/BlueMarble/default/500m",
  "http://localhost:8080/mrf_endpoint/VNGCR_LQD_I1-M4-M3_NRT/default/default/250m",
  "http://localhost:8080/mrf_endpoint/VNGCR_LQD_I1-M4-M3_NRT/default/2018-01-16/250m",
  "http://localhost:8080/mrf_endpoint/MOR5WVIRLLNT/default/default/2km",
  "http://localhost:8080/mrf_endpoint/MOR5WVIRLLNT/default/2018-01-16/2km",
];

// Fisher-Yates shuffle
function shuffle(array) {
  let counter = array.length;

  // While there are elements in the array
  while (counter > 0) {
      // Pick a random index
      let index = Math.floor(Math.random() * counter);

      // Decrease counter by 1
      counter--;

      // And swap the last element with it
      let temp = array[counter];
      array[counter] = array[index];
      array[index] = temp;
  }

  return array;
}

let urls = [];

for (let baseUrl of BASE_URL) {
  for (let index in zoomLevelMatrix) {
    const [rowMax, colMax] = zoomLevelMatrix[index];
    const row = Math.floor(Math.random() * rowMax);
    const col = Math.floor(Math.random() * colMax);
    const url = `${baseUrl}/${index}/${row}/${col}`;
    urls.push(url);
  }
}

console.log(shuffle(urls).join("\n"));